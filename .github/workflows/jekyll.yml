# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [$default-branch]
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file #3.1
          # bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Install Gems
        run: gem install classifier-reborn -v 2.2.0 && 
             gem install jekyll jekyll-archives jekyll-email-protect jekyll-feed jekyll-get-json jekyll-imagemagick &&
             gem install jekyll-jupyter-notebook jekyll-link-attributes jekyll-minifier jekyll-paginate-v2 jekyll-scholar jekyll-sitemap &&
             gem install jekyll-toc jekyll-twitter-plugin jemoji mini_racer unicode_utils materialize &&
             gem install i18n -v 1.14.1
             gem install webrick -v 1.7.0 &&
             gem install feedjira -v 3.2.2 &&
             gem install rake -v 13.0.6 &&
             gem install httparty &&
             gem install addressable -v 2.8.0 &&
             gem install em-websocket -v 0.5.1 &&
             gem install bibtex-ruby -v 6.0.0 &&
             gem install nokogiri -v 1.16.0 &&
             gem install public_suffix -v 4.0.6 &&
             gem install http_parser.rb -v 0.6.0 &&
             gem install concurrent-ruby -v 1.2.2 &&
             gem install sass-embedded -v 1.69.5 &&
             gem install json -v 2.5.1 &&
             gem install racc -v 1.5.1 &&
             gem install activesupport -v 7.1.2 &&
             gem install google-protobuf -v 3.25.1 &&
             gem install namae -v 1.1.1 &&
             gem install base64 -v 0.1.0 &&
             gem install bigdecimal -v 3.0.0 &&
             gem install drb -v 2.0.4 &&
             gem install minitest -v 5.14.2
      - name: Python installs
        run: python3 -m pip install pip -U && python3 -m pip install jupyter
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
    #  - name: Bundle pre-install
    #    run: bundle install
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: JEKYLL_ENV=production && bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
